name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  release:
    types: [published]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache PySide6
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev portaudio19-dev libpulse-dev xvfb

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install portaudio

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Verify PySide6 installation
        run: |
          python -c "import PySide6; print(f'PySide6 version: {PySide6.__version__}')"

      - name: Run code quality checks
        run: |
          black --check .
          isort --check .
          flake8 .
          mypy .
          bandit -c pyproject.toml -r .

      - name: Run tests (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run -a pytest tests/ --cov=core --cov=engines --cov=data --cov=utils --cov=ui

      - name: Run tests (Windows/macOS)
        if: matrix.os != 'ubuntu-latest'
        run: pytest tests/ --cov=core --cov=engines --cov=data --cov=utils --cov=ui

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'release'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: python scripts/build_linux.py --clean

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: python scripts/build_windows.py --clean

      - name: Build (macOS)
        if: matrix.os == 'macos-latest'
        run: python scripts/build_macos.py --clean --dmg

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: echonote-${{ matrix.os }}
          path: dist/
